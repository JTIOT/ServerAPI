{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import ip from'ip';import classes from'./resetPassword.module.scss';var ResetPassword=function ResetPassword(_ref){var match=_ref.match;var _match$params=match.params,userId=_match$params.userId,token=_match$params.token;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),resetSuccess=_useState2[0],setResetSuccess=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newPassword=_useState4[0],setNewPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),passErrorMsg=_useState8[0],setPassErrorMsg=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),serverErrorMsg=_useState10[0],setServerErrorMsg=_useState10[1];useEffect(function(){if(!newPassword&&!confirmPassword){setPassErrorMsg('Please, enter your new password');return;}if(newPassword!==confirmPassword||!newPassword||!confirmPassword){setPassErrorMsg('Password is not matched');}else{setPassErrorMsg('');}},[newPassword,confirmPassword]);var onFormSubmit=function onFormSubmit(e){e.preventDefault();if(!passErrorMsg){axios.post(\"http://\".concat(ip.address(),\":3100/user/resetPassword\"),{userId:userId,newPassword:newPassword,token:token}).then(function(res){if(res&&res.data){setResetSuccess(true);}}).catch(function _callee(err){var resData;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(err);if(!err.response){_context.next=6;break;}_context.next=4;return _regeneratorRuntime.awrap(err.response.data);case 4:resData=_context.sent;setServerErrorMsg(resData.message);case 6:case\"end\":return _context.stop();}}});});}};return React.createElement(\"div\",{className:classes.overlay},React.createElement(\"div\",{className:classes.title},\"Reset password\"),serverErrorMsg?React.createElement(\"div\",{className:classes.errorMessage},serverErrorMsg):null,passErrorMsg?React.createElement(\"div\",{className:classes.errorMessage},passErrorMsg):null,resetSuccess?React.createElement(\"div\",{className:classes.resetSuccess},\"Reset password success!!!\"):React.createElement(\"form\",{className:classes.content,onSubmit:onFormSubmit},React.createElement(\"div\",{className:classes.inputGroup},React.createElement(\"label\",null,\"NewPassword\"),React.createElement(\"input\",{className:classes.passwordField,type:\"password\",onChange:function onChange(e){return setNewPassword(e.target.value);},required:true})),React.createElement(\"div\",{className:classes.inputGroup},React.createElement(\"label\",null,\"Confirm password\"),React.createElement(\"input\",{className:classes.confirmPasswordField,type:\"password\",onChangeCapture:function onChangeCapture(e){return setConfirmPassword(e.target.value);},required:true})),passErrorMsg?null:React.createElement(\"div\",{className:classes.submitBtn},React.createElement(\"button\",{type:\"submit\"},\"Submit\"))));};export default ResetPassword;","map":{"version":3,"sources":["/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/resetPassword/resetPassword.jsx"],"names":["React","useState","useEffect","axios","ip","classes","ResetPassword","match","params","userId","token","resetSuccess","setResetSuccess","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passErrorMsg","setPassErrorMsg","serverErrorMsg","setServerErrorMsg","onFormSubmit","e","preventDefault","post","address","then","res","data","catch","err","console","log","response","resData","message","overlay","title","errorMessage","content","inputGroup","passwordField","target","value","confirmPasswordField","submitBtn"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport ip from 'ip';\nimport classes from './resetPassword.module.scss';\n\nconst ResetPassword = ({match})=>{\n\n    const {userId, token} = match.params;\n    const [resetSuccess, setResetSuccess] = useState(false);\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [passErrorMsg, setPassErrorMsg] = useState('');\n    const [serverErrorMsg, setServerErrorMsg] = useState('');\n\n    useEffect(()=>{\n        if(!newPassword && !confirmPassword){\n            setPassErrorMsg('Please, enter your new password');\n            return; \n        }\n        \n        if(newPassword !== confirmPassword ||\n            !newPassword || !confirmPassword ){\n            setPassErrorMsg('Password is not matched');\n        }\n        else{\n            setPassErrorMsg('');\n        }\n    },\n    [newPassword, confirmPassword]);\n\n    const onFormSubmit = (e)=>{\n        e.preventDefault();\n\n        if(!passErrorMsg){\n            \n            axios.post(\n            `http://${ip.address()}:3100/user/resetPassword`,\n            {\n                userId: userId,\n                newPassword: newPassword,\n                token: token\n            })\n            .then(res=>{\n                if(res && res.data){\n                    setResetSuccess(true);\n                }\n            })\n            .catch(async err=>{\n                console.log(err);\n                if(err.response){\n                    const resData = await err.response.data;\n                    setServerErrorMsg(resData.message);\n                }\n            })\n        }\n    }\n\n    return (\n        <div className={classes.overlay}>\n            <div className={classes.title}>\n                Reset password\n            </div>\n            {\n                serverErrorMsg?\n                <div className={classes.errorMessage}>\n                    {serverErrorMsg}\n                </div>\n                :\n                null\n            }\n            {   \n                passErrorMsg?\n                <div className={classes.errorMessage}>\n                    {passErrorMsg}\n                </div>\n                :\n                null\n            }\n            {\n                \n                resetSuccess?\n                <div className={classes.resetSuccess}>\n                    Reset password success!!!\n                </div>\n                :\n                <form className={classes.content} onSubmit={onFormSubmit}>\n                    <div className={classes.inputGroup}>\n                        <label>NewPassword</label>\n                        <input className={classes.passwordField}\n                            type='password'\n                            onChange={(e)=>setNewPassword(e.target.value)}\n                            required />\n                    </div>\n                    <div className={classes.inputGroup}>\n                        <label>Confirm password</label>\n                        <input className={classes.confirmPasswordField}\n                            type='password' \n                            onChangeCapture={(e)=>setConfirmPassword(e.target.value)}\n                            required />\n                    </div>\n                    {\n                        passErrorMsg?\n                        null\n                        :\n                        <div className={classes.submitBtn}>\n                            <button type='submit'>Submit</button>\n                        </div>\n                    }\n                </form>\n            }\n        </div>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}