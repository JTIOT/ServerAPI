{"ast":null,"code":"import _slicedToArray from \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/dropdown/dropdown.jsx\";\nimport React, { useState } from 'react';\nimport classes from './dropdown.module.scss';\n\nconst Dropdown = ({\n  title,\n  options,\n  onValueChanged\n}) => {\n  const _useState = useState('undefine'),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const onValueChange = e => {\n    const val = e.target.value;\n    setValue(val);\n    console.log(val);\n    val ? onValueChanged(options[val], val) : onValueChanged(val, val);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, title), React.createElement(\"select\", {\n    className: classes.dropdown,\n    value: value,\n    onChange: onValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    key: \"undefine\",\n    value: \"undefine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"---select---\"), options.map((item, index) => {\n    return React.createElement(\"option\", {\n      key: index,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, item);\n  })));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/dropdown/dropdown.jsx"],"names":["React","useState","classes","Dropdown","title","options","onValueChanged","value","setValue","onValueChange","e","val","target","console","log","overlay","label","dropdown","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAsC;AAAA,oBAEzBL,QAAQ,CAAC,UAAD,CAFiB;AAAA;AAAA,QAE5CM,KAF4C;AAAA,QAErCC,QAFqC;;AAInD,QAAMC,aAAa,GAAIC,CAAD,IAAK;AAEvB,UAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASL,KAArB;AAEAC,IAAAA,QAAQ,CAACG,GAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAA,IAAAA,GAAG,GAACL,cAAc,CAACD,OAAO,CAACM,GAAD,CAAR,EAAeA,GAAf,CAAf,GAAmCL,cAAc,CAACK,GAAD,EAAMA,GAAN,CAApD;AACH,GAPD;;AASA,SACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACa,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAEb,OAAO,CAACc,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCZ,KAAlC,CADJ,EAEI;AAAQ,IAAA,SAAS,EAAEF,OAAO,CAACe,QAA3B;AAAqC,IAAA,KAAK,EAAEV,KAA5C;AAAmD,IAAA,QAAQ,EAAEE,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,GAAG,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAIQJ,OAAO,CAACa,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAe;AACvB,WAAO;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCD,IAAnC,CAAP;AACH,GAFD,CAJR,CAFJ,CADJ;AAeH,CA5BD;;AA8BA,eAAehB,QAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport classes from './dropdown.module.scss';\n\nconst Dropdown = ({title, options, onValueChanged}) => {\n\n    const [value, setValue] = useState('undefine');\n\n    const onValueChange = (e)=>{\n        \n        const val = e.target.value;\n\n        setValue(val);\n        console.log(val);\n        val?onValueChanged(options[val], val):onValueChanged(val, val);\n    }\n\n    return (\n        <div className={classes.overlay}>\n            <label className={classes.label}>{title}</label>\n            <select className={classes.dropdown} value={value} onChange={onValueChange}>\n                <option key='undefine' value='undefine'>---select---</option>\n                {\n                    \n                    options.map((item, index)=>{\n                        return <option key={index} value={index}>{item}</option>\n                    })\n                    \n                }\n            </select>\n        </div>\n    );\n}\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}