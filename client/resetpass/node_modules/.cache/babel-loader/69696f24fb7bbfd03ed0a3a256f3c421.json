{"ast":null,"code":"import _slicedToArray from \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/resetpass/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/resetpass/src/components/resetPassword/resetPassword.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport classes from './resetPassword.module.scss';\n\nconst ResetPassword = ({\n  match\n}) => {\n  const _match$params = match.params,\n        userId = _match$params.userId,\n        token = _match$params.token;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newPassword = _useState2[0],\n        setNewPassword = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confirmPassword = _useState4[0],\n        setConfirmPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        passErrorMsg = _useState6[0],\n        setPassErrorMsg = _useState6[1];\n\n  useEffect(() => {\n    if (newPassword !== confirmPassword || !newPassword || !confirmPassword) {\n      setPassErrorMsg('Password is not matched');\n    } else {\n      setPassErrorMsg('');\n    }\n  }, [newPassword, confirmPassword]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (!passErrorMsg) {\n      console.log('submit new password ', newPassword);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, passErrorMsg ? React.createElement(\"div\", {\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, passErrorMsg) : null, React.createElement(\"form\", {\n    className: classes.content,\n    onSubmit: onFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"NewPassword:\"), React.createElement(\"input\", {\n    className: classes.passwordField,\n    type: \"password\",\n    onChange: e => setNewPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Confirm password:\"), React.createElement(\"input\", {\n    className: classes.confirmPasswordField,\n    type: \"password\",\n    onChangeCapture: e => setConfirmPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), passErrorMsg ? null : React.createElement(\"div\", {\n    className: classes.submitBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/Nelson/Desktop/JITIOT/ServerAPI/client/resetpass/src/components/resetPassword/resetPassword.jsx"],"names":["React","useState","useEffect","classes","ResetPassword","match","params","userId","token","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passErrorMsg","setPassErrorMsg","onFormSubmit","e","preventDefault","console","log","overlay","errorMessage","content","inputGroup","passwordField","target","value","confirmPasswordField","submitBtn"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAAA,wBAELA,KAAK,CAACC,MAFD;AAAA,QAEtBC,MAFsB,iBAEtBA,MAFsB;AAAA,QAEdC,KAFc,iBAEdA,KAFc;;AAAA,oBAGSP,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,QAGtBQ,WAHsB;AAAA,QAGTC,cAHS;;AAAA,qBAIiBT,QAAQ,CAAC,EAAD,CAJzB;AAAA;AAAA,QAItBU,eAJsB;AAAA,QAILC,kBAJK;;AAAA,qBAKWX,QAAQ,CAAC,EAAD,CALnB;AAAA;AAAA,QAKtBY,YALsB;AAAA,QAKRC,eALQ;;AAO7BZ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGO,WAAW,KAAKE,eAAhB,IACC,CAACF,WADF,IACiB,CAACE,eADrB,EACsC;AAClCG,MAAAA,eAAe,CAAC,yBAAD,CAAf;AACH,KAHD,MAII;AACAA,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;AACJ,GARQ,EAST,CAACL,WAAD,EAAcE,eAAd,CATS,CAAT;;AAWA,QAAMI,YAAY,GAAIC,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,CAACJ,YAAJ,EAAiB;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCV,WAApC;AACH;AACJ,GAND;;AAOA,SACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACiB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQP,YAAY,GACZ;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACkB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,YADL,CADY,GAKZ,IAPR,EASI;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACmB,OAAzB;AAAkC,IAAA,QAAQ,EAAEP,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACoB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,IAAA,SAAS,EAAEpB,OAAO,CAACqB,aAA1B;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,QAAQ,EAAGR,CAAD,IAAKN,cAAc,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV,CAFjC;AAGI,IAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAQI;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACoB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,IAAA,SAAS,EAAEpB,OAAO,CAACwB,oBAA1B;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,eAAe,EAAGX,CAAD,IAAKJ,kBAAkB,CAACI,CAAC,CAACS,MAAF,CAASC,KAAV,CAF5C;AAGI,IAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,EAgBQb,YAAY,GACZ,IADY,GAGZ;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACyB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAnBR,CATJ,CADJ;AAoCH,CA7DD;;AA+DA,eAAexB,aAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport classes from './resetPassword.module.scss';\n\nconst ResetPassword = ({match})=>{\n\n    const {userId, token} = match.params;\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [passErrorMsg, setPassErrorMsg] = useState('');\n\n    useEffect(()=>{\n        if(newPassword !== confirmPassword ||\n            !newPassword || !confirmPassword ){\n            setPassErrorMsg('Password is not matched');\n        }\n        else{\n            setPassErrorMsg('');\n        }\n    },\n    [newPassword, confirmPassword]);\n\n    const onFormSubmit = (e)=>{\n        e.preventDefault();\n\n        if(!passErrorMsg){\n            console.log('submit new password ', newPassword);\n        }\n    }\n    return (\n        <div className={classes.overlay}>\n            {   \n                passErrorMsg?\n                <div className={classes.errorMessage}>\n                    {passErrorMsg}\n                </div>\n                :\n                null\n            }\n            <form className={classes.content} onSubmit={onFormSubmit}>\n                <div className={classes.inputGroup}>\n                    <label>NewPassword:</label>\n                    <input className={classes.passwordField}\n                        type='password'\n                        onChange={(e)=>setNewPassword(e.target.value)}\n                        required />\n                </div>\n                <div className={classes.inputGroup}>\n                    <label>Confirm password:</label>\n                    <input className={classes.confirmPasswordField}\n                        type='password' \n                        onChangeCapture={(e)=>setConfirmPassword(e.target.value)}\n                        required />\n                </div>\n                {\n                    passErrorMsg?\n                    null\n                    :\n                    <div className={classes.submitBtn}>\n                        <button type='submit'>Submit</button>\n                    </div>\n                }\n            </form>\n        </div>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}