{"ast":null,"code":"import _slicedToArray from \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/qr-reder.jsx\";\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\nimport classes from './qr-reder.module.scss';\n\nconst QRCodeReader = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        qrcode = _useState2[0],\n        setQrcode = _useState2[1];\n\n  const handleError = err => {\n    console.log('QRCode error ', err);\n    setQrcode(null);\n  };\n\n  const handleScan = data => {\n    console.log('QRCode scan ', data);\n    setQrcode(data);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, qrcode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, qrcode)) : null, React.createElement(QrReader, {\n    delay: 300,\n    onError: handleError,\n    onScan: handleScan,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default QRCodeReader;","map":{"version":3,"sources":["/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/qr-reder.jsx"],"names":["React","useState","QrReader","classes","QRCodeReader","qrcode","setQrcode","handleError","err","console","log","handleScan","data","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBAEKH,QAAQ,CAAC,IAAD,CAFb;AAAA;AAAA,QAEhBI,MAFgB;AAAA,QAERC,SAFQ;;AAIvB,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAEzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B;AAEAF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GALD;;AAOA,QAAMK,UAAU,GAAIC,IAAD,IAAU;AAEzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,IAA5B;AAEAN,IAAAA,SAAS,CAACM,IAAD,CAAT;AACH,GALD;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQP,MAAM,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,MAAJ,CADJ,CADM,GAKN,IAPR,EASI,oBAAC,QAAD;AACA,IAAA,KAAK,EAAE,GADP;AAEA,IAAA,OAAO,EAAEE,WAFT;AAGA,IAAA,MAAM,EAAEI,UAHR;AAIA,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAkBH,CApCD;;AAsCA,eAAeT,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport QrReader from 'react-qr-reader';\nimport classes from './qr-reder.module.scss';\n\nconst QRCodeReader = () => {\n\n    const [qrcode, setQrcode] = useState(null);\n\n    const handleError = (err) => {\n\n        console.log('QRCode error ', err);\n\n        setQrcode(null);\n    }\n\n    const handleScan = (data) => {\n\n        console.log('QRCode scan ', data);\n\n        setQrcode(data);\n    }\n\n    return (\n        <div>\n            {\n                qrcode?\n                <div>\n                    <p>{qrcode}</p>\n                </div>\n                :\n                null\n            }\n            <QrReader\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ width: '100%' }}\n            />\n        </div>\n    );\n}\n\nexport default QRCodeReader;"]},"metadata":{},"sourceType":"module"}