{"ast":null,"code":"import _slicedToArray from \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/dropdown/dropdown.jsx\";\nimport React, { useState } from 'react';\nimport classes from './dropdown.module.scss';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"option\", {\n  key: '',\n  value: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"---select---\");\n\nconst Dropdown = ({\n  title = '',\n  options = [],\n  onValueChanged\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const onValueChange = e => {\n    const val = e.target.value;\n    setValue(val);\n\n    if (onValueChanged) {\n      val ? onValueChanged(options[val], val) : onValueChanged(undefined, undefined);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), React.createElement(\"select\", {\n    className: classes.dropdown,\n    value: value,\n    onChange: onValueChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, _ref, options.map((item, index) => {\n    return React.createElement(\"option\", {\n      key: index,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item);\n  })));\n};\n\nDropdown.displayName = \"Dropdown\";\nDropdown.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Dropdown\",\n  \"props\": {\n    \"title\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default Dropdown;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/dropdown/dropdown.jsx\"] = {\n    name: \"Dropdown\",\n    docgenInfo: Dropdown.__docgenInfo,\n    path: \"src/components/dropdown/dropdown.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/Nelson/Desktop/JITIOT/ServerAPI/client/apifrontend/src/components/dropdown/dropdown.jsx"],"names":["React","useState","classes","Dropdown","title","options","onValueChanged","value","setValue","onValueChange","e","val","target","undefined","overlay","label","dropdown","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAoBgB;AAAQ,EAAA,GAAG,EAAE,EAAb;AAAiB,EAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kB;;AAlBhB,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAK,GAAC,EAAP;AAAWC,EAAAA,OAAO,GAAC,EAAnB;AAAuBC,EAAAA;AAAvB,CAAD,KAA4C;AAAA,oBAE/BL,QAAQ,CAAC,EAAD,CAFuB;AAAA;AAAA,QAElDM,KAFkD;AAAA,QAE3CC,QAF2C;;AAIzD,QAAMC,aAAa,GAAIC,CAAD,IAAK;AAEvB,UAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASL,KAArB;AAEAC,IAAAA,QAAQ,CAACG,GAAD,CAAR;;AACA,QAAGL,cAAH,EAAkB;AACdK,MAAAA,GAAG,GAACL,cAAc,CAACD,OAAO,CAACM,GAAD,CAAR,EAAeA,GAAf,CAAf,GAAmCL,cAAc,CAACO,SAAD,EAAYA,SAAZ,CAApD;AACH;AACJ,GARD;;AAUA,SACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAEZ,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCX,KAAlC,CADJ,EAEI;AAAQ,IAAA,SAAS,EAAEF,OAAO,CAACc,QAA3B;AAAqC,IAAA,KAAK,EAAET,KAA5C;AAAmD,IAAA,QAAQ,EAAEE,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIQJ,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAe;AACvB,WAAO;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCD,IAAnC,CAAP;AACH,GAFD,CAJR,CAFJ,CADJ;AAeH,CA7BD;;AAAMf,Q;;;;;;;;;;;;;;;;;;;;;;AA+BN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport classes from './dropdown.module.scss';\n\nconst Dropdown = ({title='', options=[], onValueChanged}) => {\n\n    const [value, setValue] = useState('');\n\n    const onValueChange = (e)=>{\n        \n        const val = e.target.value;\n\n        setValue(val);\n        if(onValueChanged){\n            val?onValueChanged(options[val], val):onValueChanged(undefined, undefined);\n        }\n    }\n\n    return (\n        <div className={classes.overlay}>\n            <label className={classes.label}>{title}</label>\n            <select className={classes.dropdown} value={value} onChange={onValueChange}>\n                <option key={''} value=''>---select---</option>\n                {\n                    \n                    options.map((item, index)=>{\n                        return <option key={index} value={index}>{item}</option>\n                    })\n                    \n                }\n            </select>\n        </div>\n    );\n}\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}